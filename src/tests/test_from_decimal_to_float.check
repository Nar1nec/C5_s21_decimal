#include <check.h>
#include <float.h>
#include "s21_decimal.h"

#test decimal_to_float_0
  float tmp;
  s21_decimal src = {{0x000026B9, 0x00000000, 0x00000000, 0x00030000}};
  float result = 9.91300011;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_1
  float tmp;
  s21_decimal src = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};
  float result = 0.0;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_2
  float tmp;
  s21_decimal src = {{0x0000000F, 0x00000000, 0x00000000, 0x80010000}};
  float result = -1.5;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_3
  float tmp;
  s21_decimal src = {{0x00000009, 0x00000000, 0x00000000, 0x00010000}}; // 0.9
  float result = 0.899999976f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_4
  float tmp;
  s21_decimal src = {{0x0001869F, 0x00000000, 0x00000000, 0x00040000}}; // 9.9999
  float result = 9.99989986f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_5
  float tmp;
  s21_decimal src = {{0xF533512E, 0x0000004B, 0x00000000, 0x00060000}}; // 326236.328238
  float result = 326236.344f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_6
  float tmp;
  s21_decimal src = {{0xDC425734, 0x01C068FA, 0x00000000, 0x00070000}}; // 12621621621.2821812
  float result = 12621621200.f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_7
  float tmp;
  s21_decimal src = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
      0x00000000}};  // 79228162514264337593543950335
  float result = 79228162500000000000000000000.f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_8
  float tmp;
  s21_decimal src = {{0x000000D3, 0x00007C45, 0x00007C57,
      0x80080000}};  // -5871783107468845.32076755
  float result = -5871782930000000.f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_9
  float tmp;
  s21_decimal src = {{0x00000001, 0x00000000, 0x00000000,
      0x00140000}};  // 0.00000000000000000001
  float result = 9.99999968E-21f;
  int ret = s21_from_decimal_to_float(src, &tmp);
  char buf1[512];
  char buf2[512];
  sprintf(buf1, "%.6E", tmp);
  sprintf(buf2, "%.6E", result);
  ck_assert(strcmp(buf1, buf2) == 0);
  ck_assert_int_eq(ret, 0);

#test decimal_to_float_10
  float *tmp = NULL;
  s21_decimal src = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
      0x00000000}};  // 79228162514264337593543950335
  int ret = s21_from_decimal_to_float(src, tmp);
  ck_assert_int_eq(ret, 1);