#test round_1
    s21_decimal tmp;
    s21_decimal num = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

#test round_2
    s21_decimal tmp;
    s21_decimal num = {{0x00000001, 0x00000000, 0x00000000, 0x00000000}};  // 1
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x00000000}};  // 1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

#test round_3
    s21_decimal tmp;
    s21_decimal num = {{0x00000001, 0x00000000, 0x00000000, 0x80000000}};  // -1
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x80000000}};  //-1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

#test round_4
    s21_decimal tmp;
    s21_decimal num = {{0xCF5C048C, 0x004D2BEF, 0x00000000, 0x00070000}};  // 2172188218.2812812
    s21_decimal result = {{0x8178F63A, 0x00000000, 0x00000000, 0x00000000}};  // 2172188218
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

#test round_5
    s21_decimal tmp;
    s21_decimal num = {{0xCF5C048C, 0x004D2BEF, 0x00000000, 0x00070000}};  // 2172188218.2812812
    s21_decimal result = {{0x8178F63A, 0x00000000, 0x00000000, 0x00000000}};  // 2172188218
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

#test round_6
    s21_decimal tmp;
    s21_decimal num = {{0xCF5C048C, 0x004D2BEF, 0x00000000, 0x00070000}};  // 2172188218.2812812
    s21_decimal result = {{0x8178F63A, 0x00000000, 0x00000000, 0x00000000}};  // 2172188218
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_7
    s21_decimal tmp;
    s21_decimal num = {{0xCF5C048C, 0x004D2BEF, 0x00000000, 0x00070000}};  // 2172188218.2812812
    s21_decimal result = {{0x8178F63A, 0x00000000, 0x00000000, 0x00000000}};  // 2172188218
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_8
    s21_decimal tmp;
    s21_decimal num = {{0xFEADBDA2, 0x000001FB, 0x00000000, 0x80060000}};  // -2181821.218210
    s21_decimal result = {{0x00214ABD, 0x00000000, 0x00000000, 0x80000000}};  //-2181821
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_9
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000}}; // 79228162514264337593543950335
    s21_decimal result = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000}};  // 79228162514264337593543950335
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_10
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};  // -79228162514264337593543950335
    s21_decimal result = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};  //-79228162514264337593543950335
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_11
    s21_decimal tmp;
    s21_decimal num = {{0x00000000, 0x00000000, 0x00000000, 0x00020000}};  // 0.00
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_12
    s21_decimal tmp;
    s21_decimal num = {{0x000F4240, 0x00000000, 0x00000000, 0x00020000}};  // 10000.00
    s21_decimal result = {{0x00002710, 0x00000000, 0x00000000, 0x00000000}};  // 10000
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_13
    s21_decimal tmp;
    s21_decimal num = {{0x000F4240, 0x00000000, 0x00000000, 0x80020000}};  // -10000.00
    s21_decimal result = {{0x00002710, 0x00000000, 0x00000000, 0x80000000}};  //-10000
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_14
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};  // -7.9228162514264337593543950335
    s21_decimal result = {{0x00000008, 0x00000000, 0x00000000, 0x80000000}};  //-8
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_15
    s21_decimal tmp;
    s21_decimal num = {{0x00000467, 0x0000007A, 0x00000000, 0x00040000}};  // 52398601.1239
    s21_decimal result = {{0x031F8A09, 0x00000000, 0x00000000, 0x00000000}};  // 52398601
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_16
    s21_decimal tmp;
    s21_decimal num = {{0x00000467, 0x0000007A, 0x00000000, 0x80000000}};  // -523986011239
    s21_decimal result = {{0x00000467, 0x0000007A, 0x00000000, 0x80000000}};  //-523986011239
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_17
    s21_decimal tmp;
    s21_decimal num = {{0x00000467, 0x0000007A, 0x00003215, 0x00010000}};  // 23650570576955414727997.5
    s21_decimal result = {{0xCCCCCD3E, 0x199999A5, 0x00000502, 0x00000000}};  // 23650570576955414727998
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_18
    s21_decimal tmp;
    s21_decimal num = {{0x00000467, 0x0000007A, 0x00205FF0, 0x80020000}};  // -391386782621189641642978.31
    s21_decimal result = {{0xBD70A3E2, 0x1EB851EC, 0x000052E1, 0x80000000}};  //-391386782621189641642978
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_19
    s21_decimal tmp;
    s21_decimal num = {{0x000F4240, 0x00002710, 0x00002710, 0x80050000}};  // -1844674407800451901.20000
    s21_decimal result = {{0xB333333D, 0x19999999, 0x00000000, 0x80000000}};  //-1844674407800451901
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_20
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x80050000}};  // -184467440737095.51615
    s21_decimal result = {{0xAC471B48, 0x0000A7C5, 0x00000000, 0x80000000}};  //-184467440737096
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_21
    s21_decimal tmp;
    s21_decimal num = {{0x0000000E, 0x00000000, 0x00000000, 0x00000000}};  // 14
    s21_decimal result = {{0x0000000E, 0x00000000, 0x00000000, 0x00000000}};  // 14
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_22
    s21_decimal tmp;
    s21_decimal num = {{0x0000000F, 0x00000000, 0x00000000, 0x80000000}};  // -15
    s21_decimal result = {{0x0000000F, 0x00000000, 0x00000000, 0x80000000}};  //-15
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_23
    s21_decimal tmp;
    s21_decimal num = {{0x0000000B, 0x00000000, 0x00000000, 0x00010000}};  // 1.1
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x00000000}};  // 1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_24
    s21_decimal tmp;
    s21_decimal num = {{0x0000000B, 0x00000000, 0x00000000, 0x80010000}};  // -1.1
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x80000000}};  // -1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_25
    s21_decimal tmp;
    s21_decimal num = {{0x00000095, 0x00000000, 0x00000000, 0x80020000}};  // -1.49
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x80000000}};  // 1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_26
    s21_decimal tmp;
    s21_decimal num = {{0x0000000F, 0x00000000, 0x00000000, 0x80010000}};  // -1.5
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x80000000}};  //-2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_27
    s21_decimal tmp;
    s21_decimal num = {{0x00000097, 0x00000000, 0x00000000, 0x80020000}};  // -1.51
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x80000000}};  //-2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_28
    s21_decimal tmp;
    s21_decimal num = {{0x00000095, 0x00000000, 0x00000000, 0x00020000}};  // 1.49
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x00000000}};  // 1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_29
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x001C0000}};  // 7.9228162514264337593543950335
    s21_decimal result = {{0x00000008, 0x00000000, 0x00000000, 0x00000000}};  // 8
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_30
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0x00000000, 0x00000000, 0x80060000}};  // -4294.967295
    s21_decimal result = {{0x000010C7, 0x00000000, 0x00000000, 0x80000000}};  //-4295
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_31
    s21_decimal tmp;
    s21_decimal num = {{0x075BCD15, 0x00000000, 0x00000000, 0x801B0000}};  // -0.000000000000000000123456789
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x80000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_32
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00050000}};  // 184467440737095.51615
    s21_decimal result = {{0xAC471B48, 0x0000A7C5, 0x00000000, 0x00000000}};  // 184467440737096
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_33
    s21_decimal tmp;
    s21_decimal num = {{0xFFFFFFFF, 0x00000000, 0x00000000, 0x00060000}};  // 4294.967295
    s21_decimal result = {{0x000010C7, 0x00000000, 0x00000000, 0x00000000}};  // 4295
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_34
    s21_decimal tmp;
    s21_decimal num = {{0x075BCD15, 0x00000000, 0x00000000, 0x001B0000}};  // 0.000000000000000000123456789
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_35
    s21_decimal tmp;
    s21_decimal num = {{0x075BCD15, 0x00000000, 0x00000000, 0x00120000}};  // 0.000000000123456789
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_36
    s21_decimal tmp;
    s21_decimal num = {{0x075BCD15, 0x00000000, 0x00000000, 0x00090000}};  // 0.123456789
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_37
    s21_decimal tmp;
    s21_decimal num = {{0x0000000F, 0x00000000, 0x00000000, 0x00010000}};  // 1.5
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x00000000}};  // 2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_38
    s21_decimal tmp;
    s21_decimal num = {{0x00000011, 0x00000000, 0x00000000, 0x00020000}};  // 0.17
    s21_decimal result = {{0x00000000, 0x00000000, 0x00000000, 0x00000000}};  // 0
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_39
    s21_decimal tmp;
    s21_decimal num = {{0x00000086, 0x00000000, 0x00000000, 0x00020000}};  // 1.34
    s21_decimal result = {{0x00000001, 0x00000000, 0x00000000, 0x00000000}};  // 1
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_40
    s21_decimal tmp;
    s21_decimal num = {{0x000006E5, 0x00000000, 0x00000000, 0x00030000}};  // 1.765
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x00000000}};  // 2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_41
    s21_decimal tmp;
    s21_decimal num = {{0x000000F9, 0x00000000, 0x00000000, 0x00020000}};  // 2.49
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x00000000}};  // 2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_42
    s21_decimal tmp;
    s21_decimal num =  {{0x00000019, 0x00000000, 0x00000000, 0x00010000}};  // 2.5
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x00000000}};  // 2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_43
    s21_decimal tmp;
    s21_decimal num = {{0x000000FB, 0x00000000, 0x00000000, 0x00020000}};  // 2.51
    s21_decimal result = {{0x00000003, 0x00000000, 0x00000000, 0x00000000}};  // 3
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_44
    s21_decimal tmp;
    s21_decimal num = {{0x000000F9, 0x00000000, 0x00000000, 0x80020000}};  // -2.49
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x80000000}};  // -2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_45
    s21_decimal tmp;
    s21_decimal num = {{0x00000019, 0x00000000, 0x00000000, 0x80010000}};  // -2.5
    s21_decimal result = {{0x00000002, 0x00000000, 0x00000000, 0x80000000}};  // -2
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_46
    s21_decimal tmp;
    s21_decimal num = {{0x000000FB, 0x00000000, 0x00000000, 0x80020000}};  // -2.51
    s21_decimal result = {{0x00000003, 0x00000000, 0x00000000, 0x80000000}};  //-3
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_47
    s21_decimal tmp;
    s21_decimal num = {{0x52453C00, 0x0000013A, 0x00000000, 0x000B0000}};  // 13.50000000000
    s21_decimal result = {{0x0000000E, 0x00000000, 0x00000000, 0x00000000}};  // 14
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_48
    s21_decimal tmp;
    s21_decimal num = {{0xC2AC6A00, 0x00000021, 0x00000000, 0x000A0000}};  // 14.5000000000
    s21_decimal result = {{0x0000000E, 0x00000000, 0x00000000, 0x00000000}};  // 14
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_49
    s21_decimal tmp;
    s21_decimal num = {{0x1FC40A5F, 0xA98FD4BE, 0x00000000, 0x00020000}};  // 122182182271212611.51
    s21_decimal result = {{0x24285C44, 0x01B2140C, 0x00000000, 0x00000000}}; // 122182182271212612
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_50
    s21_decimal tmp;
    s21_decimal num = {{0x1FC40A5D, 0xA98FD4BE, 0x00000000, 0x00020000}};  // 122182182271212611.49
    s21_decimal result = {{0x24285C43, 0x01B2140C, 0x00000000, 0x00000000}};  // 122182182271212611
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_51
    s21_decimal tmp;
    s21_decimal num = {{0x1FC40A5F, 0xA98FD4BE, 0x00000000, 0x80020000}};  // -122182182271212611.51
    s21_decimal result = {{0x24285C44, 0x01B2140C, 0x00000000, 0x80000000}};  //-122182182271212612
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_52
    s21_decimal tmp;
    s21_decimal num = {{0x1FC40A5D, 0xA98FD4BE, 0x00000000, 0x80020000}};  // -122182182271212611.49
    s21_decimal result = {{0x24285C43, 0x01B2140C, 0x00000000, 0x80000000}};  //-122182182271212611
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);

  #test round_53
    s21_decimal tmp;
    s21_decimal num =  {{0x075BCD15, 0x00000000, 0x00000000, 0x00030000}};  // 123456.789
    s21_decimal result = {{0x0001E241, 0x00000000, 0x00000000, 0x00000000}};  // 123457
    int ret = s21_round(num, &tmp);
    char buf1[512];
    char buf2[512];
    float tmp_fl;
    s21_from_decimal_to_float(tmp, &tmp_fl);
    float result_fl;
    s21_from_decimal_to_float(result, &result_fl);
    sprintf(buf1, "%.6E", tmp_fl);
    sprintf(buf2, "%.6E", result_fl);
    ck_assert(strcmp(buf1, buf2) == 0);
    ck_assert_int_eq(ret, 0);